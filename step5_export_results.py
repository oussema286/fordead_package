#!/usr/bin/env python3
"""
Script pour l'√©tape 5: Export results
Ce script exporte les r√©sultats de d√©tection de d√©p√©rissement sous forme de shapefile
avec des classes de confiance bas√©es sur l'index de stress.
"""

from fordead.steps.step5_export_results import export_results

def main():
    # Configuration des chemins
    data_directory = "tuto_output"
    
    print("=== √âtape 5: Export results ===")
    print(f"R√©pertoire de donn√©es: {data_directory}")
    print()
    
    # Param√®tres de configuration
    params = {
        'data_directory': data_directory,
        'frequency': "M",  # Fr√©quence d'export (M = mensuel)
        'multiple_files': False,  # Un seul fichier de r√©sultats
        'conf_threshold_list': [0.265],  # Seuil de confiance
        'conf_classes_list': ["Low anomaly", "Severe anomaly"]  # Classes de confiance
    }
    
    print("Param√®tres utilis√©s:")
    for key, value in params.items():
        print(f"  {key}: {value}")
    print()
    
    print("Explication du processus d'export:")
    print("  1. Vectorisation des r√©sultats de d√©p√©rissement")
    print("  2. Cr√©ation de polygones pour chaque zone de d√©p√©rissement")
    print("  3. Attribution des classes de confiance bas√©es sur l'index de stress")
    print("  4. Export au format shapefile (.shp)")
    print()
    
    print("Classes de confiance:")
    print("  - Seuil: 0.265")
    print("  - 'Low anomaly': Index de stress < 0.265 (anomalie l√©g√®re)")
    print("  - 'Severe anomaly': Index de stress ‚â• 0.265 (anomalie s√©v√®re)")
    print()
    
    print("Fr√©quence d'export:")
    print("  - 'M' = Mensuel")
    print("  - Export des r√©sultats √† la fin de chaque mois")
    print("  - Polygones contiennent l'√©tat √† la fin de la p√©riode")
    print()
    
    print("Contenu des polygones:")
    print("  - P√©riode de d√©tection de la premi√®re anomalie")
    print("  - Classe de confiance (Low/Severe anomaly)")
    print("  - G√©om√©trie des zones de d√©p√©rissement")
    print("  - Attributs temporels et de confiance")
    print()
    
    print("Filtrage appliqu√©:")
    print("  - Masque forestier: Seules les zones foresti√®res")
    print("  - Anomalies confirm√©es: ‚â• 3 anomalies successives")
    print("  - Pixels non analysables: Exclus")
    print()
    
    try:
        print("D√©but de l'export des r√©sultats...")
        export_results(**params)
        print("‚úÖ Export termin√© avec succ√®s!")
        print()
        print("R√©sultats g√©n√©r√©s dans:")
        print(f"  - {data_directory}/Results/")
        print(f"    - periodic_results_dieback.shp (shapefile principal)")
        print(f"    - periodic_results_dieback.dbf (table attributaire)")
        print(f"    - periodic_results_dieback.prj (projection)")
        print(f"    - periodic_results_dieback.shx (index)")
        print()
        print("Utilisation des r√©sultats:")
        print("  - Visualisation dans un SIG (QGIS, ArcGIS)")
        print("  - Analyse spatiale des zones de d√©p√©rissement")
        print("  - Cartographie des for√™ts affect√©es")
        print("  - Suivi temporel des anomalies")
        print("  - Planification des interventions foresti√®res")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de l'export: {e}")
        return False
    
    return True

if __name__ == "__main__":
    success = main()
    if success:
        print("\nüéâ √âtape 5 termin√©e avec succ√®s!")
        print("üéØ Workflow fordead complet termin√©!")
    else:
        print("\nüí• √âchec de l'√©tape 5")
