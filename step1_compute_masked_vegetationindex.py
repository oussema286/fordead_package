#!/usr/bin/env python3
"""
Script pour l'√©tape 1: Compute masked vegetation index
Ce script calcule les indices de v√©g√©tation masqu√©s pour une s√©rie temporelle Sentinel-2
"""

from fordead.steps.step1_compute_masked_vegetationindex import compute_masked_vegetationindex

def main():
    # Configuration des chemins
    input_directory = "fordead_data-main/fordead_data-main/sentinel_data/dieback_detection_tutorial/study_area"
    data_directory = "tuto_output"
    
    print("=== √âtape 1: Compute masked vegetation index ===")
    print(f"R√©pertoire d'entr√©e: {input_directory}")
    print(f"R√©pertoire de sortie: {data_directory}")
    print()
    
    # Param√®tres de configuration
    params = {
        'input_directory': input_directory,
        'data_directory': data_directory,
        'lim_perc_cloud': 0.4,  # Maximum 40% de couverture nuageuse
        'interpolation_order': 0,  # Interpolation par plus proche voisin
        'sentinel_source': "THEIA",  # Source des donn√©es Sentinel-2
        'soil_detection': False,  # D√©sactiver la d√©tection de sol
        'formula_mask': "B2 > 600 | (B3 == 0) | (B4 == 0)",  # Formule de masquage
        'vi': "CRSWIR",  # Indice de v√©g√©tation CRSWIR
        'apply_source_mask': True  # Appliquer le masque de source
    }
    
    print("Param√®tres utilis√©s:")
    for key, value in params.items():
        print(f"  {key}: {value}")
    print()
    
    try:
        print("D√©but du calcul des indices de v√©g√©tation masqu√©s...")
        compute_masked_vegetationindex(**params)
        print("‚úÖ Calcul termin√© avec succ√®s!")
        print()
        print("R√©sultats g√©n√©r√©s dans:")
        print(f"  - {data_directory}/VegetationIndex/ (indices de v√©g√©tation)")
        print(f"  - {data_directory}/Mask/ (masques binaires)")
        
    except Exception as e:
        print(f"‚ùå Erreur lors du calcul: {e}")
        return False
    
    return True

if __name__ == "__main__":
    success = main()
    if success:
        print("\nüéâ √âtape 1 termin√©e avec succ√®s!")
    else:
        print("\nüí• √âchec de l'√©tape 1")
